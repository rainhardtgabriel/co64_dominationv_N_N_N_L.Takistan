// ============================================================================================
// F3 - Mission Header
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

class Header
{
	gameType = Coop;
	minPlayers = 1;
	maxPlayers = 42;
};

// ============================================================================================

disabledAI = 1;


// F3 - Loading Screen
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

onLoadName = "*** Insert mission name here. ***";
onLoadMission = "Made with the F3 Mission Development Framework";
author = "*** Insert mission author name here. ***";
loadScreen = "intro\pics\conflict_resolve.paa";
overviewPicture = "intro\pics\taskforce47.paa";

// ============================================================================================

// F3 - Debug Console
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

enableDebugConsole = 2;

// ============================================================================================

// F3 - Respawn Settings
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

respawn = 3;
respawndelay = 10;
respawnOnStart = 0;
RespawnDialog = 0;										// default = 1. show respawn timer and scoreboard when killed.
respawnTemplates[] = {"f_JIP"};

// ============================================================================================


// F3 - Start of Notifications block.

class cfgNotifications
{
	// Notification Template
	class Template
	{
		title = ""; // Tile displayed as text on black background. Filled by arguments.
		iconPicture = ""; // Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = ""; // Short text displayed over the icon. Colored by "color", filled by arguments.
		description = ""; // Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1}; // Icon and text color
		duration = 5; // How many seconds will the notification be displayed
		priority = 0; // Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {}; // Required difficulty settings. All listed difficulties has to be enabled
	};

	// A generic warning notification
	class Alert
	{
		title = "ALERT";
		description = "%1";
		iconPicture="\A3\ui_f\data\map\markers\military\warning_ca.paa";
		duration = 3;
		priority = 9;
	};

	// Notifications for the F3 Safe Start Component
	class SafeStart
	{
		title = "SAFE START";
		description = "%1";
		iconPicture="\A3\UI_F\data\IGUI\Cfg\Actions\settimer_ca.paa";
		duration = 10;
		priority = 0;
	};
	class SafeStartMissionStarting
	{
		title = "SAFE START";
		description = "%1";
		iconPicture="\A3\UI_F\data\IGUI\Cfg\Actions\settimer_ca.paa";
		duration = 3;
		priority = 1;
	};

	// Notification for the F3 Authorised Crew Component
	class UnauthorisedCrew {
		title= "NON-AUTHORISED CREW!";
		description= "%1";
		iconPicture = "\A3\ui_f\data\map\markers\military\warning_ca.paa";
		duration = 3;
		priority = 5;
	};

	// Notification for the F3 Mapclick Teleport component
	class MapClickTeleport {
		title= "NOTE";
		description= "%1";
		iconPicture = "\A3\ui_f\data\map\markers\military\start_ca.paa";
		duration = 3;
		priority = 5;
	};

	// Notification for the F3 JIP Component
	class JIP {
		title= "REINFORCEMENTS";
		description= "%1";
		iconPicture = "\A3\ui_f\data\map\markers\military\flag_ca.paa";
		duration = 3;
		priority = 5;
	};
};

// ============================================================================================

// F3 - Start of Params code blocks.
// WARNING: DO NOT DELETE OR COMMENT OUT THIS CODE BLOCK

class Params
{


// ============================================================================================

// F3 - Debug Mode
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)
// WARNING: DO NOT DISABLE THIS COMPONENT

    class f_param_debugMode
    {
            title = "$STR_f_param_debugMode";
            values[] = {0,1};
            texts[] = {"Off","On"};
            default = 0;
            code = "f_var_debugMode = %1";
    };

// ============================================================================================

// F3 - Folk Assign Gear Script
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

    class f_param_backpacks
    {
            title = "$STR_f_param_loadouts";
            values[] = {0,1,2};
            texts[] = {"Light","Medium","Heavy"};
            default = 1;
            code = "f_param_backpacks = %1";
    };
	
// ============================================================================================
	
// F3 - LoadoutSelector
// This Parameter will select the Loadouts that are chosen for each Side

	class f_param_uniforms
	{
			title = "$STR_f_param_uniforms";
			values[] = {0,1,2,3};
			texts[] = {"Vanilla","RHS Woodland","RHS Desert","CUP Woodland"};
			default = 3;
			code = "f_param_uniforms = %1";
	};
// ============================================================================================

// F3 - Radio Systems Support
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

    class f_param_radios
    {
            title = "Radio System";
            values[] = {0,1,2};
            texts[] = {"Off","ACRE2","TFR"};
            default = 1;
            code = "f_var_radios = %1";
    };

// ============================================================================================

// F3 - Medical Systems Support
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

    class f_param_medical
    {
            title = "Medical System";
            values[] = {0,1,2};
            texts[] = {"Arma 3 Default","ACE3 Basic Medical System","ACE3 Advanced Medical System"};
            default = 2;
            code = "f_var_medical = %1";
    };

// ============================================================================================

// F3 - Mission Timer/Safe Start
// Credits: Please see the F2 online manual (http://www.ferstaberinde.com/f3/en/)

    class f_param_mission_timer
    {
            title = "$STR_f_param_mission_timer";
            values[] = {0,1,2,3,4,5,6,7,8,9,10,15};
            texts[] = {"$STR_f_param_mission_timer_off","1","2","3","4","5","6","7","8","9","10","15"};
            default = 0;
            code = "f_param_mission_timer = %1";
    };

// ============================================================================================

// F3 - Mission Conditions Selector
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

	class f_param_weather
	{
		title = "$STR_f_param_weather";
		values[] = {0,1,2,3,4,5,6,7,8};
		texts[] = {$STR_f_param_weather_Option0,$STR_f_param_weather_Option1,$STR_f_param_weather_Option2,$STR_f_param_weather_Option3,$STR_f_param_weather_Option4,$STR_f_param_weather_Option5,$STR_f_param_weather_Option6,$STR_f_param_weather_Option7,$STR_f_param_weather_Option8};
		default = 4;
		function = "f_fnc_setWeather";		// This function is called to apply the values
		isGlobal = 0;						// Execute this only on the server
		code = "f_param_weather = %1";
	};

	class f_param_fog
	{
		title = "Fog";
		values[] = {0,1,2};
		texts[] = {"None","Light","Heavy"};
		default = 0;
		function = "f_fnc_SetFog";			// This function is called to apply the values
		isGlobal = 0;						// Execute this only on the server
		code = "f_param_fog = %1";
	};

    class f_param_timeOfDay
	{
		title = "$STR_f_param_timeOfDay";
		values[] = {0,1,2,3,4,5,6,7};
		texts[] = {$STR_f_param_timeOfDay_Option0,$STR_f_param_timeOfDay_Option1,$STR_f_param_timeOfDay_Option2,$STR_f_param_timeOfDay_Option3,$STR_f_param_timeOfDay_Option4,$STR_f_param_timeOfDay_Option5,$STR_f_param_timeOfDay_Option6,$STR_f_param_timeOfDay_Option7};
		default = 1;
		function = "f_fnc_setTime";			// This function is called to apply the values
 		isGlobal = 0;						// Execute this only on the server
 		code = "f_param_timeOfDay = %1";
	};

// ============================================================================================

// F3 - AI Skill Selector
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

/*
	class f_param_AISkill_BLUFOR
	{
		title = "$STR_f_param_AISkill_BLUFOR";
		values[] = {0,1,2,3};
		texts[] = {$STR_f_param_AISkill_Option0,$STR_f_param_AISkill_Option1,$STR_f_param_AISkill_Option2,$STR_f_param_AISkill_Option3};
		default = 1;
		code = "f_param_AISkill_BLUFOR = %1";
	};
*/

/*
	class f_param_AISkill_OPFOR
	{
		title = "$STR_f_param_AISkill_OPFOR";
		values[] = {0,1,2,3};
		texts[] = {$STR_f_param_AISkill_Option0,$STR_f_param_AISkill_Option1,$STR_f_param_AISkill_Option2,$STR_f_param_AISkill_Option3};
		default = 1;
		code = "f_param_AISkill_OPFOR = %1";
	};
*/

/*
	class f_param_AISkill_INDP
	{
		title = "$STR_f_param_AISkill_INDP";
		values[] = {0,1,2,3};
		texts[] = {$STR_f_param_AISkill_Option0,$STR_f_param_AISkill_Option1,$STR_f_param_AISkill_Option2,$STR_f_param_AISkill_Option3};
		default = 1;
		code = "f_param_AISkill_INDP = %1";
	};
*/

// ============================================================================================

// F3 - Caching
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

	class f_param_caching
	{
		title = "Cache AI outside distance (m)";
		values[] = {0,600,800,1000,1500,2000};
		default = 2000;
		code = "f_param_caching = %1";
	};

// ============================================================================================

// F3 - End of Params code blocks.
// WARNING: DO NOT DELETE OR COMMENT OUT THIS CODE BLOCK


   class MKY_EFX
	{
		title = "Sand Particle EFX strength";
		values[] = {0,1,2,3,4};
		texts[] = {"Random","Light","Moderate","Heavy","Disabled"};
		default = 1;
	};

};

// ============================================================================================

// F3 - Briefing Template
// Credits: BIS - Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

class CfgDebriefing
{
	class End1
	{
		title = "Ending #1";
		subtitle = "";
		description = "*** Insert debriefing #1 here. ***";
		// pictureBackground = "";
		// picture = "";
		// pictureColor[] = {0.0,0.3,0.6,1};
	};

	class End2
	{
		title = "Ending #2";
		subtitle = "";
		description = "*** Insert debriefing #2 here. ***";
		// pictureBackground = "";
		// picture = "";
		// pictureColor[] = {0.0,0.3,0.6,1};
	};

	class End3
	{
		title = "Ending #3";
		subtitle = "";
		description = "*** Insert debriefing #3 here. ***";
		// pictureBackground = "";
		// picture = "";
		// pictureColor[] = {0.0,0.3,0.6,1};
	};

	class End4
	{
		title = "Ending #4";
		subtitle = "";
		description = "*** Insert debriefing #4 here. ***";
		// pictureBackground = "";
		// picture = "";
		// pictureColor[] = {0.0,0.3,0.6,1};
	};

	class End5
	{
		title = "Ending #5";
		subtitle = "";
		description = "*** Insert debriefing #5 here. ***";
		// pictureBackground = "";
		// picture = "";
		// pictureColor[] = {0.0,0.3,0.6,1};
	};

	class End6
	{
		title = "Ending #6";
		subtitle = "";
		description = "*** Insert debriefing #6 here. ***";
		// pictureBackground = "";
		// picture = "";
		// pictureColor[] = {0.0,0.3,0.6,1};
	};

};

// ============================================================================================

// F3 - Respawn Templates
// Credits: Please see the F3 online manual (http://www.ferstaberinde.com/f3/en/)

class CfgRespawnTemplates
{
	// F3 JIP Menu
	class f_JIP
	{
		onPlayerRespawn = "f\JIP\f_JIP_playerRespawn.sqf";
	};
};

// ============================================================================================

// F3 - Menu components
// DO NOT REMOVE OR DISABLE THIS BLOCK OF CODE

// Menu components for the JIP Menu
#include "f\JIP\f_JIP_kitpicker.h"
#include "f\JIP\f_JIP_grppicker.h"


// ============================================================================================

// F3 - Functions
// DO NOT REMOVE OR DISABLE THIS BLOCK OF CODE

class CfgFunctions
{

#include "functions\cfgfunctions.hpp"			// Integrated Sepp Functions

	class F // Defines the "owner"
	{
		class common // category
		{
			file = "f\common";
			// Defines the function to preInit (the paramArray dosent seem to be constructed at preInit stage).
			class processParamsArray
			{
				preInit = 1;
				postInit = 1;
			};

			class nearPlayer{};
		};
		class mpEnd
		{
			file = "f\mpEnd";
			class mpEnd{};
			class mpEndReceiver{};
		};
		class assignGear
		{
			// Defines the functions to preInit the compling of the assignGear function used by units.
			file = "f\assignGear";
			class assignGear{};
		};
		class setGroupID
		{
			file = "f\setGroupID";
			class setGroupID{};
		};
		class missionConditions
		{
			file = "f\missionConditions";
			class SetTime{};
			class SetFog{};
			class SetWeather{};
		};
		class cache
		{
			file = "f\cache";
			class cInit {};
			class cTracker {};
			class gCache {};
			class gUncache {};
		};
		class groupMarkers {
			file = "f\groupMarkers";
			class localGroupMarker{};
			class localSpecialistMarker{};
		};
		class authorisedCrew
		{
			file = "f\authorisedCrew";
			class authorisedCrewCheck {};
		};
		class FTMemberMarkers
		{
			file = "f\FTMemberMarkers";
			class SetLocalFTMemberMarkers{};
			class GetMarkerColor{};
			class LocalFTMarkerSync{};
		};
		class bodyRemoval
		{
			file = "f\removeBody";
			class removeBody{};
		};
		class setAISkill
		{
			file = "f\setAISKill";
			class setAISKill{};
		};
		class mapClickTeleport
		{
			file = "f\mapClickTeleport";
			class mapClickTeleportUnit{};
			class mapClickTeleportGroup{};
		};
		class nametag
		{
			file = "f\nametag";
			class drawNameTag{};
		};
		class preMount
		{
			file = "f\preMount";
			class mountGroups{};
		};
		class zeus
		{
			file = "f\zeus";
			class zeusInit{};
			class zeusAddAddons{};
			class zeusAddObjects{};
		};
		class acre
		{
			file = "f\radios\acre2";
			class acre_removeRadios{};
			class acre_addRadios{};
			class acre_setRadioFrequencies{};
			class acre_configureSpectatorChat{};
		};
		class tfr
		{
			file = "f\radios\tfr";
			class tfr_removeRadios{};
			class tfr_addRadios{};
			class tfr_setRadioFrequencies{};
			class tfr_configureSpectatorChat{};
		};
		class safeStart
		{
			file = "f\safeStart";
			class safety{};
		};

	};
	
	class tf47 
	{
		tag = "tf47";
		class intro
		{
			file = "functions";
			class introShot;
		};
	};
	
		//#include "tf47CoreScripts\UMenu\Functions.hpp"
        //#include "tf47CoreScripts\tf47CfgFunctions.hpp"	
};


#include "dyncap\Defines.hpp"

class RscTitles
{
	class intro

	{

	  	idd=-1;

	  	movingEnable=0;

	  	duration=4.2;

	  	fadein=1;

	  	fadeout=1.5;

	  	name="intro";

	  	controls[]={"title1"};

	  	class title1: RscPicture

		{
   			type =0;

   			idc = -1;

   			style =48;

   			colorBackground[] = {0, 0, 0, 0};

   			colorText[] = {1, 1, 1, 1};

   			font = "PuristaMedium";

   			size = 0;

	  	  	text="loading.jpg";

			x=0;

	  	  	y=-0.2;

	  	  	w=1;

	  	  	h=1.3;

		};

	};

	class CapProgressBar
	{
		idd = -1;
		onLoad = "uiNamespace setVariable [""CapProgressBar"", _this select 0];";
		duration = 999999999;
		movingEnable = false;
		class controls
		{
			class CapProgressBarBackground: IGUIBack
			{
				idc = 22200;
				x = 0.259375 * safezoneW + safezoneX;
				y = 0.247042 * safezoneH + safezoneY;
				w = 0.48125 * safezoneW;
				h = "1 * ((((safezoneW / safezoneH) min 1.2) / 0.9) / 25)";
				colorBackground[] = {"0.0745","0.0863","0.1059",0.8};
			};
			class CapProgressBarProgressBar: RscProgress
			{
				idc = 22202;
				text = "";
				x = 0.259375 * safezoneW + safezoneX;
				y = 0.247042 * safezoneH + safezoneY;
				w = 0.48125 * safezoneW;
				zzh = 0.032 * safezoneH;
				h = "1 * ((((safezoneW / safezoneH) min 1.2) / 0.9) / 25)";
				colorFrame[] = {0,0,0,1};
				colorBar[]={"(profilenamespace getvariable ['GUI_BCG_RGB_R',0.3843])","(profilenamespace getvariable ['GUI_BCG_RGB_G',0.7019])","(profilenamespace getvariable ['GUI_BCG_RGB_B',0.8862])","(profilenamespace getvariable ['GUI_BCG_RGB_A',0.7])"};
				texture = "#(argb,8,8,3)color(1,1,1,1)";
			};
		};
	};
};

class CfgSounds
{

sounds[] = {mission_new, mission_complete,sidemission_complete,sidemission_new,sidemission_failed};

class mission_new
{
name = "mission_new";
sound[] = {\sounds\mission_new.ogg, 1.9, 1.0};
titles[] = {0, ""};
};
class mission_complete
{
name = "mission_complete";
sound[] = {\sounds\mission_complete.ogg, 1.9, 1.0};
titles[] = {0, ""};
};
class sidemission_complete
{
name = "sidemission_complete";
sound[] = {\sounds\sidemission_complete.ogg, 1.9, 1.0};
titles[] = {0, ""};
};
class sidemission_new
{
name = "sidemission_new";
sound[] = {\sounds\sidemission_new.ogg, 1.9, 1.0};
titles[] = {0, ""};
};
class sidemission_failed
{
name = "sidemission_failed";
sound[] = {\sounds\sidemission_failed.ogg, 1.9, 1.0};
titles[] = {0, ""};
};
};
class CfgMusic
{
	tracks[]={"MKY_Blizzard","MKY_Snowfall"};

	class MKY_Blizzard
	{
		name = "";
		sound[] = {"\MKY\sounds\m0nkey_blizzard.ogg", db+0, 1.0};
	};
	class MKY_Snowfall
	{
		name = "";
		sound[] = {"\MKY\sounds\m0nkey_snowfall.ogg", db+0, 1.0};
	};

	class intro
	{
		name="intro";
		sound[] = {"\sounds\intro.ogg",1,1.0};
		titles[]={};
	};
};

// ============================================================================================

// F3 - Custom Insignia

class CfgUnitInsignia {
	#include "f\assignGear\insignia\define.hpp"
};

// =============== TF47 Stuff =================================================================